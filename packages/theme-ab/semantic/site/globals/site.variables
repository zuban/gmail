/*******************************
     User variable
*******************************/

@contentWidth: 1200px;
@contentMaxWidth: 1440px;

/*-------------------
       Colors
--------------------*/
@pageBackground: #fff;
@headerBackground: #444444;
@textColor: #444444;
@footerBackground: @headerBackground;
@middleGrey: #555;

/*-------------------
      New color variables
--------------------*/
@black: #1e1d1c;
@dark-sky-blue: #30beeb;
@green: #69b72c;
@white: #ffffff;

/*-------------------
       Fonts
--------------------*/
@defaultSans: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, sans-serif;

/*-------------------
       Muli and Heebo Fonts
--------------------*/
@Muli: 'Muli', @defaultSans;
@Heebo: 'Heebo', @defaultSans;

/*******************************
     Semantic-UI variable
*******************************/

/*-------------------
       Fonts
--------------------*/
@headerFont        : @Muli, -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, sans-serif;
@pageFont          : @Muli, -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, sans-serif;
@importGoogleFonts : false;

/*-------------------
      Base Sizes
--------------------*/

/* This is the single variable that controls them all */
@emSize   : 14px;

/* The size of page text  */
@fontSize : 14px;

/*-------------------
    Border Radius
--------------------*/

@absoluteBorderRadius: 0;

/*-------------------
       Links
--------------------*/

@linkColor           : #69caa3;

/*-------------------
      Site Colors
--------------------*/

/*---  Colors  ---*/
@red              : #DB2828;
@orange           : #F2711C;
@yellow           : #FBBD08;
@olive            : #B5CC18;
@teal             : #69caa3;
@blue             : #2185D0;
@violet           : #6435C9;
@purple           : #A333C8;
@pink             : #E03997;
@brown            : #A5673F;
@grey             : #767676;

/*---  Light Colors  ---*/
@lightRed         : #FF695E;
@lightOrange      : #FF851B;
@lightYellow      : #FFE21F;
@lightOlive       : #D9E778;
@lightGreen       : #2ECC40;
@lightTeal        : #6DFFFF;
@lightBlue        : #54C8FF;
@lightViolet      : #A291FB;
@lightPurple      : #DC73FF;
@lightPink        : #FF8EDF;
@lightBrown       : #D67C1C;
@lightGrey        : #6e6e6e;
@lightBlack       : #545454;

/*---   Neutrals  ---*/
@fullBlack        : #000000;
@offWhite         : #F9FAFB;
@darkWhite        : #F3F4F5;
@midWhite         : #DCDDDE;

/*--- Colored Backgrounds ---*/
@redBackground    : #FFE8E6;
@orangeBackground : #FFEDDE;
@yellowBackground : #FFF8DB;
@oliveBackground  : #FBFDEF;
@greenBackground  : #E5F9E7;
@tealBackground   : #E1F7F7;
@blueBackground   : #DFF0FF;
@violetBackground : #EAE7FF;
@purpleBackground : #F6E7FF;
@pinkBackground   : #FFE3FB;
@brownBackground  : #F1E2D3;

/*-------------------
     Breakpoints
--------------------*/

@mobileBreakpoint            : 320px;
@tabletBreakpoint            : 768px;
@computerBreakpoint          : 992px;
@largeMonitorBreakpoint      : 1200px;
@widescreenMonitorBreakpoint : 1920px;

/*-------------------
    Derived Values
--------------------*/

/* Responsive */
@largestMobileScreen : (@tabletBreakpoint - 1px);
@largestTabletScreen : (@computerBreakpoint - 1px);
@largestSmallMonitor : (@largeMonitorBreakpoint - 1px);
@largestLargeMonitor : (@widescreenMonitorBreakpoint - 1px);

/*-------------------
    Media query Values
--------------------*/
@highdensity: ~"only screen and (-webkit-min-device-pixel-ratio: 1.5)",
              ~"only screen and (min--moz-device-pixel-ratio: 1.5)",
              ~"only screen and (-o-min-device-pixel-ratio: 3/2)",
              ~"only screen and (min-device-pixel-ratio: 1.5)";
@mobile:      ~"only screen and (max-width:" @largestMobileScreen~")";
@tablet:      ~"only screen and (min-width:" @tabletBreakpoint~") and (max-width:" @largestTabletScreen~")";
@computer:    ~"only screen and (min-width:" @computerBreakpoint~")";

/*-------------------
        Sizes
--------------------*/

/*
  Sizes are all expressed in terms of 14px/em (default em)
  This ensures these "ratios" remain constant despite changes in EM
*/

@miniSize        : (11 / 14);
@tinySize        : (12 / 14);
@smallSize       : (13 / 14);
@mediumSize      : (14 / 14);
@largeSize       : (16 / 14);
@bigSize         : (18 / 14);
@hugeSize        : (20 / 14);
@massiveSize     : (24 / 14);

/*-------------------
       Em Sizes
--------------------*/

/*
  This rounds @size values to the closest pixel then expresses that value in (r)em.
  This ensures all size values round to exact pixels
*/
@mini            : unit( round(@miniSize * @emSize) / @emSize, rem);
@tiny            : unit( round(@tinySize * @emSize) / @emSize, rem);
@small           : unit( round(@smallSize * @emSize) / @emSize, rem);
@medium          : unit( round(@mediumSize * @emSize) / @emSize, rem);
@large           : unit( round(@largeSize * @emSize) / @emSize, rem);
@big             : unit( round(@bigSize * @emSize) / @emSize, rem);
@huge            : unit( round(@hugeSize * @emSize) / @emSize, rem);
@massive         : unit( round(@massiveSize * @emSize) / @emSize, rem);

/* em */
@relativeMini    : unit( round(@miniSize * @emSize) / @emSize, em);
@relativeTiny    : unit( round(@tinySize * @emSize) / @emSize, em);
@relativeSmall   : unit( round(@smallSize * @emSize) / @emSize, em);
@relativeMedium  : unit( round(@mediumSize * @emSize) / @emSize, em);
@relativeLarge   : unit( round(@largeSize * @emSize) / @emSize, em);
@relativeBig     : unit( round(@bigSize * @emSize) / @emSize, em);
@relativeHuge    : unit( round(@hugeSize * @emSize) / @emSize, em);
@relativeMassive : unit( round(@massiveSize * @emSize) / @emSize, em);

/* rem */
@absoluteMini    : unit( round(@miniSize * @emSize) / @emSize, rem);
@absoluteTiny    : unit( round(@tinySize * @emSize) / @emSize, rem);
@absoluteSmall   : unit( round(@smallSize * @emSize) / @emSize, rem);
@absoluteMedium  : unit( round(@mediumSize * @emSize) / @emSize, rem);
@absoluteLarge   : unit( round(@largeSize * @emSize) / @emSize, rem);
@absoluteBig     : unit( round(@bigSize * @emSize) / @emSize, rem);
@absoluteHuge    : unit( round(@hugeSize * @emSize) / @emSize, rem);
@absoluteMassive : unit( round(@massiveSize * @emSize) / @emSize, rem);
